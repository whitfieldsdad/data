/*
 * Tables:
 * - cve
 * - cpe
 * - cwe
 * - cve_to_epss
 * - cve_to_cwe
 * - cisa_kev
 */
DROP TABLE IF EXISTS cve;
CREATE TABLE cve AS (
    SELECT
        id,
        published AS create_time,
        lastModified AS update_time
    FROM 'cves.jsonl.gz'
);

DROP TABLE IF EXISTS cpe;
CREATE TABLE cpe AS (
    SELECT cpeName as id
    FROM 'cpes.jsonl.gz'
);

/* TODO */
DROP TABLE IF EXISTS capec_techniques;
CREATE TABLE capec_techniques AS (

);

/* TODO */
DROP TABLE IF EXISTS attack_techniques;
CREATE TABLE attack_techniques AS (

);

/* TODO */
DROP TABLE IF EXISTS attack_tactics;
CREATE TABLE attack_techniques AS (

);

/* TODO */
DROP TABLE IF EXISTS attack_techniques_to_attack_tactics;
CREATE TABLE attack_techniques_to_attack_tactics AS (

);

/* TODO */
DROP TABLE IF EXISTS attack_techniques_to_capec_techniques;
CREATE TABLE attack_techniques_to_capec_techniques AS (

);

DROP TABLE IF EXISTS cve_to_epss;
CREATE TABLE cve_to_epss AS (
    SELECT 
        date, 
        cve AS cve_id, 
        epss 
    FROM 'all.parquet' 
);

DROP TABLE IF EXISTS cve_to_cwe;
CREATE TABLE cve_to_cwe AS (
    SELECT id AS cve_id, value AS cpe_id FROM (
        SELECT 
            id, 
            UNNEST(description, recursive := true) 
        FROM (
            SELECT 
                id, 
                UNNEST(weaknesses, recursive := true) AS weakness
            FROM 'cves.jsonl.gz'
        )
    )
);

DROP TABLE IF EXISTS kev;
CREATE TABLE kev AS (
    SELECT 
        cveId AS cve_id,
        dateAdded as added_date,
        dueDate as due_date,
        knownRansomwareCampaignUse as known_ransomware_campaign_use,
        notes,
        product,
        requiredAction as required_action,
        shortDescription as description
    FROM (
        SELECT UNNEST(vulnerabilities, recursive := true) FROM 'known_exploited_vulnerabilities.json'
    )
);

/* ATT&CK techniques */
DROP TABLE IF EXISTS attack_techniques;
CREATE TABLE attack_techniques AS (
    SELECT * 
    FROM (
        SELECT 
            UNNEST(objects, recursive := true)
        FROM read_json(
            'enterprise-attack.json', 
            auto_detect=true, 
            format='auto', 
            maximum_object_size=52428800
        )
    )
    WHERE type = 'attack-pattern'
);

/* CAPEC techniques */
SELECT 
    id,
    name,
    description,
    created AS create_time,
    modified AS update_time,
FROM (
    SELECT 
        UNNEST(objects, recursive := true) 
    FROM 'stix-capec.json'
)
WHERE type = 'attack-pattern' AND x_capec_status != 'Deprecated';